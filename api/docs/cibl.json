{
    "swagger": "2.0",
    "info": {
        "version": "0.3.0",
        "title": "Cars In Bike Lanes API"
    },
    "basePath": "/api",
    "paths": {
        "/upload": {
            "post": {
                "description": "Upload a new submission to the CIBL moderation queue.",
                "parameters": [
                    {
                        "name": "image",
                        "in": "formData",
                        "description": "An image of the offense being documented. Currently only JPG, GIF, and PNG are accepted.",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "plate",
                        "in": "formData",
                        "description": "The plate number, 8 characters max. Longer strings will be cut off after the 8th character.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "formData",
                        "description": "Two letter code representing the license plate's state of origin, such as `NY` or `CA`. `NYPD`, `FDNY`, `OTHER` and `NONE` are also recognized.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date",
                        "in": "formData",
                        "description": "An ISO8601 time string representing the time and date of the offense.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "gps_latitude",
                        "in": "formData",
                        "description": "GPS latitude value.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "gps_longitude",
                        "in": "formData",
                        "description": "GPS longitude value.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "street1",
                        "in": "formData",
                        "description": "The first of two optional street name values. Preferably the street parallel to the offender's direction.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "street2",
                        "in": "formData",
                        "description": "The second of two optional street name values. Preferrably the nearest cross street to the offense.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "An optional eyewitness description of the offense to provide context, personal notes and cathartic rant space. No length limit but < 200 characters is recommended for brevity and styling purposes.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success. Indicates upload has been accepted and moved into the moderation queue for moderator approval.",
                        "schema": {
                            "title": "accepted",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Failed. `error` will suggest a reason why.",
                        "schema": {
                            "title": "error",
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "description": "A search of the CIBL database. If neither the `box` or `around` search mode parameters are set, the entire project area will be queried. Fields can be queried together or alone, in any combination. Returns an array of `Entry`.",
                "parameters": [
                    {
                        "name": "box",
                        "in": "query",
                        "description": "An array of four numbers representing maximum latitude, minimum latitude, maximum longitude, and minimum longitude (North, South, East, West), together forming a search box.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "around",
                        "in": "query",
                        "description": "Alternate way to specify a box search, in which the box is defined by it's center coordinate and distance from center coordinate to the middle of any edge. An array of three numbers (GPS latitude, GPS longitude, distance in degrees from coordindate to middle of a box edge), converted by CIBL into a normal box search.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A search of CIBL for a specific ID number, a unique incrementing number that is used to index a single entry. Although it can be used with other search fields, there is no reason to do so as the ID field will only ever return one result, if any.",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "plate",
                        "in": "query",
                        "description": "Filter results by a particular license plate string.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "Filter results to only include entries that occured before a certain ISO8601 time string.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Filter results to only include entries that occured after a certain ISO8601 time string.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "streets",
                        "in": "query",
                        "description": "A list of strings with which to filter entries by street names, inclusively. (Will only return entires that match every item in the array). For example `['bedford']` will return all entries on Bedford Ave or Bedford St, `['bedford', 'lincoln']` will return entries occuring at cross streets Bedford Ave and Lincoln Ave, or Lincoln Blvd and Bedford Terrace, or anywhere on Lincoln R. Bedfordshire Lane.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Filter by searching uploader-provided entry description tests for a specific string.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "max",
                        "in": "query",
                        "description": "The maximum number of results to return. Defaults to CIBL's site-wide setting.",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of `Entry`.",
                        "schema": {
                            "title": "entries",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Entry"
                            }
                        }
                    },
                    "400": {
                        "description": "Error.",
                        "schema": {
                            "title": "error",
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/stats": {
            "get": {
                "description": "Request specific statistics from the CIBL database. (Placeholder method, does not yet exist)",
                "responses": {
                    "200": {
                        "description": "An array of site statistics.",
                        "schema": {
                            "title": "statistics",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error.",
                        "schema": {
                            "title": "error",
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Entry": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "image_url": {
                    "type": "string"
                },
                "thumb_url": {
                    "type": "string"
                },
                "plate": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "date": {
                    "type": "number"
                },
                "gps_latitude": {
                    "type": "number"
                },
                "gps_longitude": {
                    "type": "number"
                },
                "street1": {
                    "type": "string"
                },
                "street2": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        }
    }
}